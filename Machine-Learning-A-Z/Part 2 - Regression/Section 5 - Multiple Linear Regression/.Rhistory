print("Hello World!")
print("Hello world!")
print(cars)
View(cars)
cars
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Saraly)
dataset = read.csv('Data.csv')
load("~/Workspace/Udemy/Machine-Learning-A-Z/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/Data.csv")
dataset = read.csv('Data.csv')
dataset = read.csv('Data.csv')
# Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age)
source('~/Workspace/Udemy/Machine-Learning-A-Z/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/data_preprocessing_template.R')
Data <- read.csv("~/Workspace/Udemy/Machine-Learning-A-Z/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/Data.csv")
View(Data)
dataset = read.csv('Data.csv')
Data <- read.csv("~/Workspace/Udemy/Machine-Learning-A-Z/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/Data.csv")
View(Data)
clera
clear
dataset = read.csv('Data.csv')
setwd("~/Workspace/Udemy/Machine-Learning-A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression")
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
dataset = read.csv('50_Startups.csv')
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRaio = 0.8)
training_set = subset(dataset, split = TRUE)
test_set = subset(dataset, split = FALSE)
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split = TRUE)
test_set = subset(dataset, split = FALSE)
View(test_set)
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
dataset = read.csv('50_Startups.csv')
# dataset = dataset[,2:3]
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split = TRUE)HGBVB
# Feature Scaling
# training_set[,2:3] = scale(training_set[,2:3])
# test_set[,2:3] = scale(test_set[,2:3])
# Fitting Multiple Linear Regression to the Training set
# regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State)
regressor = lm(formula = Profit ~ .,
data = training_set)
# Prdicting the Test set results
y_pred = predict(regressor, newdata = test_set)
# dataset = dataset[,2:3]
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split = TRUE)
# Feature Scaling
# training_set[,2:3] = scale(training_set[,2:3])
# test_set[,2:3] = scale(test_set[,2:3])
# Fitting Multiple Linear Regression to the Training set
# regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State)
regressor = lm(formula = Profit ~ .,
data = training_set)
# Prdicting the Test set results
y_pred = predict(regressor, newdata = test_set)
dataset = read.csv('50_Startups.csv')
# dataset = dataset[,2:3]
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set[,2:3] = scale(training_set[,2:3])
# test_set[,2:3] = scale(test_set[,2:3])
# Fitting Multiple Linear Regression to the Training set
# regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State)
regressor = lm(formula = Profit ~ .,
data = training_set)
# Prdicting the Test set results
y_pred = predict(regressor, newdata = test_set)
y_pred
View(y_pred)
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing + State ,
data = dataset)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State ,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend ,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend ,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend ,
data = dataset)
summary(regressor)
